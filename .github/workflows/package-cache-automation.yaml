name: 'Package Cache Automation'

on:
  workflow_dispatch:
    inputs:
      package_name:
        description: 'Package to cache (or leave empty for all whitelisted packages)'
        required: false
        type: choice
        options:
          - 'all'
          - cypress
          - electron
          - playwright
          - puppeteer
          - playwright-core
          - playwright-chromium
          - playwright-firefox
          - playwright-webkit
          - chromium
          - firefox
          - webkit
        default: 'all'
      deploy:
        description: 'Actually create the release (default: dry run)'
        required: false
        type: boolean
        default: false
  schedule:
    # Run daily at 2 AM UTC to check for new package versions
    - cron: '0 2 * * *'
  push:
    branches: [ main ]
    paths:
      - 'package.json'
      - 'scripts/**'
      - '.github/workflows/**'

jobs:
  cache-packages:
    runs-on: 'ubuntu-24.04'
    name: 'Cache Package Binaries'
    permissions:
      contents: write
      actions: read
    
    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: 'Setup Node'
        uses: actions/setup-node@v4
        with:
          node-version: '22.12.0'
      
      - name: 'Install Dependencies'
        run: npm install
      
      - name: 'Cache Package Binaries'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Determine if this is a deploy run
          DEPLOY_FLAG=""
          if [ "${{ github.event.inputs.deploy }}" == "true" ] || [ "${{ github.event_name }}" == "schedule" ] || [ "${{ github.event_name }}" == "push" ]; then
            DEPLOY_FLAG="--deploy"
            echo "🚀 Running in deploy mode - will create actual releases"
          else
            echo "🔍 Running in dry-run mode - will show what would be done"
          fi
          
          # Determine which package to process
          PACKAGE_FLAG=""
          if [ -n "${{ github.event.inputs.package_name }}" ] && [ "${{ github.event.inputs.package_name }}" != "all" ]; then
            PACKAGE_FLAG="--package=${{ github.event.inputs.package_name }}"
          fi
          
          # Run the automation script
          node scripts/package-cache-automation.js $DEPLOY_FLAG $PACKAGE_FLAG
      
      - name: 'Summary'
        if: always()
        run: |
          echo "## Package Cache Automation Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Source Repository:** Opentrons/opentrons (edge branch)" >> $GITHUB_STEP_SUMMARY
          echo "**Target Package:** ${{ github.event.inputs.package_name || 'All whitelisted packages' }}" >> $GITHUB_STEP_SUMMARY
          echo "**Deploy Mode:** ${{ github.event.inputs.deploy || (github.event_name == 'schedule' && 'true') || (github.event_name == 'push' && 'true') || 'false' }}" >> $GITHUB_STEP_SUMMARY
          echo "**Trigger:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The script automatically fetches package.json from the Opentrons repository and caches any binary packages found (Cypress, Electron, Puppeteer, etc.)" >> $GITHUB_STEP_SUMMARY
